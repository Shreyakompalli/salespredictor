import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
# Assuming you have a CSV file with columns 'Date', 'Sales', 'Feature1', 'Feature2', etc.
data = pd.read_csv('sales_data.csv')

# Let's assume 'Sales' is the target variable and 'Feature1', 'Feature2', etc., are predictors.
X = data.drop(['Sales', 'Date'], axis=1)
y = data['Sales']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f'Mean Squared Error (MSE): {mse:.2f}')
print(f'R-squared: {r2:.2f}')
# Let's assume 'new_data' is a DataFrame containing the features for which you want to predict sales.
new_data_predictions = model.predict(new_data)